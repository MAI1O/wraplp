{
  "manifestVersion": "3.1",
  "impls": {
    "6f6751d11ef09f17fdb6ac4858a9cdc0a628ffbc69c2d8cf58141f163831178e": {
      "address": "0x1291Be112d480055DaFd8a610b7d1e203891C274",
      "txHash": "0x24b6d2655074789d94668d104fa45b63096f4fadb36e45765519b3999d917753",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "VNFTx",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/VNFTx.sol:112"
          },
          {
            "contract": "VNFTx",
            "label": "total",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:113"
          },
          {
            "contract": "VNFTx",
            "label": "vnft",
            "type": "t_contract(IVNFT)2649",
            "src": "contracts/VNFTx.sol:115"
          },
          {
            "contract": "VNFTx",
            "label": "muse",
            "type": "t_contract(IMuseToken)2484",
            "src": "contracts/VNFTx.sol:116"
          },
          {
            "contract": "VNFTx",
            "label": "addons",
            "type": "t_contract(IERC1155)1062",
            "src": "contracts/VNFTx.sol:117"
          },
          {
            "contract": "VNFTx",
            "label": "artistPct",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:119"
          },
          {
            "contract": "VNFTx",
            "label": "addon",
            "type": "t_mapping(t_uint256,t_struct(Addon)1098_storage)",
            "src": "contracts/VNFTx.sol:134"
          },
          {
            "contract": "VNFTx",
            "label": "addonsConsumed",
            "type": "t_mapping(t_uint256,t_struct(UintSet)805_storage)",
            "src": "contracts/VNFTx.sol:136"
          },
          {
            "contract": "VNFTx",
            "label": "lockedAddons",
            "type": "t_struct(UintSet)805_storage",
            "src": "contracts/VNFTx.sol:137"
          },
          {
            "contract": "VNFTx",
            "label": "rarity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTx.sol:140"
          },
          {
            "contract": "VNFTx",
            "label": "challengesUsed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTx.sol:141"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemScore",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:144"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemId",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:145"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemPrice",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:146"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemDays",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:147"
          },
          {
            "contract": "VNFTx",
            "label": "premiumHp",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:150"
          },
          {
            "contract": "VNFTx",
            "label": "hpMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:151"
          },
          {
            "contract": "VNFTx",
            "label": "rarityMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:152"
          },
          {
            "contract": "VNFTx",
            "label": "addonsMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:153"
          },
          {
            "contract": "VNFTx",
            "label": "expectedAddons",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:155"
          },
          {
            "contract": "VNFTx",
            "label": "expectedRarity",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:157"
          },
          {
            "contract": "VNFTx",
            "label": "_addonId",
            "type": "t_struct(Counter)465_storage",
            "src": "contracts/VNFTx.sol:160"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IVNFT)2649": {
            "label": "contract IVNFT"
          },
          "t_contract(IMuseToken)2484": {
            "label": "contract IMuseToken"
          },
          "t_contract(IERC1155)1062": {
            "label": "contract IERC1155"
          },
          "t_mapping(t_uint256,t_struct(Addon)1098_storage)": {
            "label": "mapping(uint256 => struct VNFTx.Addon)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)805_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)805_storage": {
            "label": "struct EnumerableSet.UintSet"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(Counter)465_storage": {
            "label": "struct Counters.Counter"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1abf3fcf72b3210c00ced9dfd0fb5da1f06e34976bc1975aaddc5e60bb13e9f4": {
      "address": "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
      "txHash": "0x79f4310bfe463f7adf1753712dd776836cd5ee0b055a2cd14388d64a4ecd9047",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "VNFTxV2",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/VNFTxV2.sol:112"
          },
          {
            "contract": "VNFTxV2",
            "label": "total",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:113"
          },
          {
            "contract": "VNFTxV2",
            "label": "vnft",
            "type": "t_contract(IVNFT)2601",
            "src": "contracts/VNFTxV2.sol:115"
          },
          {
            "contract": "VNFTxV2",
            "label": "muse",
            "type": "t_contract(IMuseToken)2436",
            "src": "contracts/VNFTxV2.sol:116"
          },
          {
            "contract": "VNFTxV2",
            "label": "addons",
            "type": "t_contract(IERC1155)1062",
            "src": "contracts/VNFTxV2.sol:117"
          },
          {
            "contract": "VNFTxV2",
            "label": "artistPct",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:119"
          },
          {
            "contract": "VNFTxV2",
            "label": "addon",
            "type": "t_mapping(t_uint256,t_struct(Addon)1098_storage)",
            "src": "contracts/VNFTxV2.sol:134"
          },
          {
            "contract": "VNFTxV2",
            "label": "addonsConsumed",
            "type": "t_mapping(t_uint256,t_struct(UintSet)805_storage)",
            "src": "contracts/VNFTxV2.sol:136"
          },
          {
            "contract": "VNFTxV2",
            "label": "lockedAddons",
            "type": "t_struct(UintSet)805_storage",
            "src": "contracts/VNFTxV2.sol:137"
          },
          {
            "contract": "VNFTxV2",
            "label": "rarity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV2.sol:140"
          },
          {
            "contract": "VNFTxV2",
            "label": "challengesUsed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV2.sol:141"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemScore",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:144"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemId",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:145"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemPrice",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:146"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemDays",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:147"
          },
          {
            "contract": "VNFTxV2",
            "label": "premiumHp",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:150"
          },
          {
            "contract": "VNFTxV2",
            "label": "hpMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:151"
          },
          {
            "contract": "VNFTxV2",
            "label": "rarityMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:152"
          },
          {
            "contract": "VNFTxV2",
            "label": "addonsMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:153"
          },
          {
            "contract": "VNFTxV2",
            "label": "expectedAddons",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:155"
          },
          {
            "contract": "VNFTxV2",
            "label": "expectedRarity",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:157"
          },
          {
            "contract": "VNFTxV2",
            "label": "_addonId",
            "type": "t_struct(Counter)465_storage",
            "src": "contracts/VNFTxV2.sol:160"
          },
          {
            "contract": "VNFTxV2",
            "label": "testAdd",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:162"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IVNFT)2601": {
            "label": "contract IVNFT"
          },
          "t_contract(IMuseToken)2436": {
            "label": "contract IMuseToken"
          },
          "t_contract(IERC1155)1062": {
            "label": "contract IERC1155"
          },
          "t_mapping(t_uint256,t_struct(Addon)1098_storage)": {
            "label": "mapping(uint256 => struct VNFTxV2.Addon)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)805_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)805_storage": {
            "label": "struct EnumerableSet.UintSet"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(Counter)465_storage": {
            "label": "struct Counters.Counter"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "012a3e5e3dc172cc53f5fba77ade0351d7eff488bf439b458ab88227356c44e3": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xab5b9cb26b818666e0b60a1da243e9f8971748e7947500f108a9913949043646",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "VNFTx",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/VNFTx.sol:109"
          },
          {
            "contract": "VNFTx",
            "label": "vnft",
            "type": "t_contract(IVNFT)3204",
            "src": "contracts/VNFTx.sol:111"
          },
          {
            "contract": "VNFTx",
            "label": "muse",
            "type": "t_contract(IMuseToken)3039",
            "src": "contracts/VNFTx.sol:112"
          },
          {
            "contract": "VNFTx",
            "label": "addons",
            "type": "t_contract(IERC1155)1302",
            "src": "contracts/VNFTx.sol:113"
          },
          {
            "contract": "VNFTx",
            "label": "artistPct",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:115"
          },
          {
            "contract": "VNFTx",
            "label": "addon",
            "type": "t_mapping(t_uint256,t_struct(Addon)1338_storage)",
            "src": "contracts/VNFTx.sol:130"
          },
          {
            "contract": "VNFTx",
            "label": "addonsConsumed",
            "type": "t_mapping(t_uint256,t_struct(UintSet)1044_storage)",
            "src": "contracts/VNFTx.sol:132"
          },
          {
            "contract": "VNFTx",
            "label": "lockedAddons",
            "type": "t_struct(UintSet)1044_storage",
            "src": "contracts/VNFTx.sol:133"
          },
          {
            "contract": "VNFTx",
            "label": "rarity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTx.sol:136"
          },
          {
            "contract": "VNFTx",
            "label": "challengesUsed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTx.sol:137"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemScore",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:140"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemId",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:141"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemPrice",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:142"
          },
          {
            "contract": "VNFTx",
            "label": "healthGemDays",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:143"
          },
          {
            "contract": "VNFTx",
            "label": "premiumHp",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:146"
          },
          {
            "contract": "VNFTx",
            "label": "hpMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:147"
          },
          {
            "contract": "VNFTx",
            "label": "rarityMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:148"
          },
          {
            "contract": "VNFTx",
            "label": "addonsMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:149"
          },
          {
            "contract": "VNFTx",
            "label": "expectedAddons",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:151"
          },
          {
            "contract": "VNFTx",
            "label": "expectedRarity",
            "type": "t_uint256",
            "src": "contracts/VNFTx.sol:153"
          },
          {
            "contract": "VNFTx",
            "label": "_addonId",
            "type": "t_struct(Counter)704_storage",
            "src": "contracts/VNFTx.sol:156"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IVNFT)3204": {
            "label": "contract IVNFT"
          },
          "t_contract(IMuseToken)3039": {
            "label": "contract IMuseToken"
          },
          "t_contract(IERC1155)1302": {
            "label": "contract IERC1155"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Addon)1338_storage)": {
            "label": "mapping(uint256 => struct VNFTx.Addon)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)1044_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)1044_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(Counter)704_storage": {
            "label": "struct CountersUpgradeable.Counter"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "2668392603a213cc6817414eda066e05e2e70bb717c7ba7a3c741814be2b5c50": {
      "address": "0x8f86403A4DE0BB5791fa46B8e795C547942fE4Cf",
      "txHash": "0xe96b9a70d5f9e484f467469f24cbb0007ee06a6764a15d4dc1f4c898821092f8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "VNFTxV2",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/VNFTxV2.sol:113"
          },
          {
            "contract": "VNFTxV2",
            "label": "vnft",
            "type": "t_contract(IVNFT)3204",
            "src": "contracts/VNFTxV2.sol:115"
          },
          {
            "contract": "VNFTxV2",
            "label": "muse",
            "type": "t_contract(IMuseToken)3039",
            "src": "contracts/VNFTxV2.sol:116"
          },
          {
            "contract": "VNFTxV2",
            "label": "addons",
            "type": "t_contract(IERC1155)2807",
            "src": "contracts/VNFTxV2.sol:117"
          },
          {
            "contract": "VNFTxV2",
            "label": "artistPct",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:119"
          },
          {
            "contract": "VNFTxV2",
            "label": "addon",
            "type": "t_mapping(t_uint256,t_struct(Addon)2843_storage)",
            "src": "contracts/VNFTxV2.sol:134"
          },
          {
            "contract": "VNFTxV2",
            "label": "addonsConsumed",
            "type": "t_mapping(t_uint256,t_struct(UintSet)1044_storage)",
            "src": "contracts/VNFTxV2.sol:136"
          },
          {
            "contract": "VNFTxV2",
            "label": "lockedAddons",
            "type": "t_struct(UintSet)1044_storage",
            "src": "contracts/VNFTxV2.sol:137"
          },
          {
            "contract": "VNFTxV2",
            "label": "rarity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV2.sol:140"
          },
          {
            "contract": "VNFTxV2",
            "label": "challengesUsed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV2.sol:141"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemScore",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:144"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemId",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:145"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemPrice",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:146"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemDays",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:147"
          },
          {
            "contract": "VNFTxV2",
            "label": "premiumHp",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:150"
          },
          {
            "contract": "VNFTxV2",
            "label": "hpMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:151"
          },
          {
            "contract": "VNFTxV2",
            "label": "rarityMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:152"
          },
          {
            "contract": "VNFTxV2",
            "label": "addonsMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:153"
          },
          {
            "contract": "VNFTxV2",
            "label": "expectedAddons",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:155"
          },
          {
            "contract": "VNFTxV2",
            "label": "expectedRarity",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:157"
          },
          {
            "contract": "VNFTxV2",
            "label": "_addonId",
            "type": "t_struct(Counter)704_storage",
            "src": "contracts/VNFTxV2.sol:160"
          },
          {
            "contract": "VNFTxV2",
            "label": "newVar",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:178"
          },
          {
            "contract": "VNFTxV2",
            "label": "testVar",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:180"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IVNFT)3204": {
            "label": "contract IVNFT"
          },
          "t_contract(IMuseToken)3039": {
            "label": "contract IMuseToken"
          },
          "t_contract(IERC1155)2807": {
            "label": "contract IERC1155"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Addon)2843_storage)": {
            "label": "mapping(uint256 => struct VNFTxV2.Addon)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)1044_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)1044_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(Counter)704_storage": {
            "label": "struct CountersUpgradeable.Counter"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "5c6602fd9935e52e1611bf97744c046039e2b4497da1c9685002a6ca9b800a82": {
      "address": "0x5eb3Bc0a489C5A8288765d2336659EbCA68FCd00",
      "txHash": "0x6537acdab7bc669d2e17b0da4de5874be94c9cffd6267a8be1923702e2969904",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "VNFTxV2",
            "label": "paused",
            "type": "t_bool",
            "src": "contracts/VNFTxV2.sol:114"
          },
          {
            "contract": "VNFTxV2",
            "label": "vnft",
            "type": "t_contract(IVNFT)4259",
            "src": "contracts/VNFTxV2.sol:116"
          },
          {
            "contract": "VNFTxV2",
            "label": "muse",
            "type": "t_contract(IMuseToken)4094",
            "src": "contracts/VNFTxV2.sol:117"
          },
          {
            "contract": "VNFTxV2",
            "label": "addons",
            "type": "t_contract(IERC1155)2693",
            "src": "contracts/VNFTxV2.sol:118"
          },
          {
            "contract": "VNFTxV2",
            "label": "artistPct",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:120"
          },
          {
            "contract": "VNFTxV2",
            "label": "addon",
            "type": "t_mapping(t_uint256,t_struct(Addon)2729_storage)",
            "src": "contracts/VNFTxV2.sol:135"
          },
          {
            "contract": "VNFTxV2",
            "label": "addonsConsumed",
            "type": "t_mapping(t_uint256,t_struct(UintSet)1044_storage)",
            "src": "contracts/VNFTxV2.sol:137"
          },
          {
            "contract": "VNFTxV2",
            "label": "lockedAddons",
            "type": "t_struct(UintSet)1044_storage",
            "src": "contracts/VNFTxV2.sol:138"
          },
          {
            "contract": "VNFTxV2",
            "label": "rarity",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV2.sol:141"
          },
          {
            "contract": "VNFTxV2",
            "label": "challengesUsed",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/VNFTxV2.sol:142"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemScore",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:145"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemId",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:146"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemPrice",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:147"
          },
          {
            "contract": "VNFTxV2",
            "label": "healthGemDays",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:148"
          },
          {
            "contract": "VNFTxV2",
            "label": "premiumHp",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:151"
          },
          {
            "contract": "VNFTxV2",
            "label": "hpMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:152"
          },
          {
            "contract": "VNFTxV2",
            "label": "rarityMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:153"
          },
          {
            "contract": "VNFTxV2",
            "label": "addonsMultiplier",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:154"
          },
          {
            "contract": "VNFTxV2",
            "label": "expectedAddons",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:156"
          },
          {
            "contract": "VNFTxV2",
            "label": "expectedRarity",
            "type": "t_uint256",
            "src": "contracts/VNFTxV2.sol:158"
          },
          {
            "contract": "VNFTxV2",
            "label": "_addonId",
            "type": "t_struct(Counter)704_storage",
            "src": "contracts/VNFTxV2.sol:161"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IVNFT)4259": {
            "label": "contract IVNFT"
          },
          "t_contract(IMuseToken)4094": {
            "label": "contract IMuseToken"
          },
          "t_contract(IERC1155)2693": {
            "label": "contract IERC1155"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Addon)2729_storage)": {
            "label": "mapping(uint256 => struct VNFTxV2.Addon)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)1044_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)1044_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_struct(Counter)704_storage": {
            "label": "struct CountersUpgradeable.Counter"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "6856f928ef99c5e53c9de3c1847f8b7c4234216417eb1a3d7c2eaf5601016b4e": {
      "address": "0x851356ae760d987E095750cCeb3bC6014560891C",
      "txHash": "0x03ac7a3b67cf8eb94fa43ec72e4813e1d82fd66d508a38ea7a6531201163fb25",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "pairExist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5e16d3684df720b131a2a1f07d67aff9ff45b8e453f469f80a92dc211dc44be8": {
      "address": "0x2bdCC0de6bE1f7D2ee689a0342D76F52E8EFABa3",
      "txHash": "0x9f135b51c2dac2704fe3f91c998497b62ff2f941f429bae9a00af8d26d0d8122",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "pairExist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e28712ff5a0c409234dc0942f94de9da33f08ce3f201f5dcc852303469b97de0": {
      "address": "0x162A433068F51e18b7d13932F27e66a3f99E6890",
      "txHash": "0x10173f96f7af7589dd934cf1493a522c9a6dc6f0f0ebce9ec530e9746efd53cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "pairExist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f3b2a4aa133d2d1ad9e456503f4908fb779d5e92226b204006cba192a695ee86": {
      "address": "0x2E2Ed0Cfd3AD2f1d34481277b3204d807Ca2F8c2",
      "txHash": "0x516b1343477eed5054b7e550b94d73eb16880f0abcdefc9633f62532393122d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "pairExist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "288d70ad66019a590b94f1832d34a1fbbca45814db9524a7e5e74d62957aa2f3": {
      "address": "0xf4B146FbA71F41E0592668ffbF264F1D186b2Ca8",
      "txHash": "0x1d882cf06c87f77ffb6073ae7d5a901fce0bffc3631054c51797989208544a8c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "pairExist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "270af3bfae227c4fe9d0fb410abb3a39593782fb282f34e0bdf089b6758bf81d": {
      "address": "0xA4899D35897033b927acFCf422bc745916139776",
      "txHash": "0xafa1fb29ab37313bccaab5e77dd27cbeeb0386c033eb6c20ef9f12aabd8d16b0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "pairExist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ccc88ac28fff063b4d207284de6ea132c6f17ec8dfdef1cb2491986eddb796ed": {
      "address": "0xCace1b78160AE76398F486c8a18044da0d66d86D",
      "txHash": "0x0bbaec5d7bf2cec6c44faeb8e3575a414171b7d4c9bce0e98cb23ff99f7dfaa8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "pairExist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7bbd2f064a45590d1adf07e1ed9b5cf301e787a511bc13cfed09363e4f50ce59": {
      "address": "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      "txHash": "0x0832d61706ccf6bd27bc52edec1bb0ac2c0c2bb181997ca601eab648457d1428",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "pairExist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a948fa74aae82d0037e0f9128df8c67200daf513426b21738d7c802d33d81f49": {
      "address": "0xa82fF9aFd8f496c3d6ac40E2a0F282E47488CFc9",
      "txHash": "0x89bbed976270b4c8eb3a9ee1734f9d546e8dd4b9f788fd01177d296e5085041d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "pairExist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2eba7660d1fbc1603da2986536e8583631b587588355ef23fad6d0f4d13caad0": {
      "address": "0x0E801D84Fa97b50751Dbf25036d067dCf18858bF",
      "txHash": "0x50d85973ade7352494d041d15bc4d772a682247984470c33d36d384cbda6bd56",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "pairExist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f3d09157a83641ba78cdf3d59a8c0f6a33c068d8cfa2dda3986d5e7e9685d4da": {
      "address": "0xb7278A61aa25c888815aFC32Ad3cC52fF24fE575",
      "txHash": "0xbbe45117bb1882933d9c6a43642f367989e7968c5350eb972e8b960cb68c4a0f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "pairExist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8fc5508a3c2571f05614d157d6403ba9754a2fec3dae521b697eddfa7c6112a1": {
      "address": "0xFD471836031dc5108809D173A067e8486B9047A3",
      "txHash": "0x0679d028763f590d7e7bcd950277ea042b006cd4b966c80c093daafdf206cd89",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "pairExist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "12754a8b126f44ba70fd9473c227aaa388443ca0b99cecb1f8af1b010d474bfc": {
      "address": "0x04C89607413713Ec9775E14b954286519d836FEf",
      "txHash": "0x16b0c9767c516ff2b08c287d00bc117e0644a178d67d5b441e5b0c5f6a583fee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "pairExist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "88c79f24c5d36b43487dd9ead241acc614f1dd4fefa439d5ba5ad0906d502af0": {
      "address": "0x0355B7B8cb128fA5692729Ab3AAa199C1753f726",
      "txHash": "0x9f7146a04285ef244924bbb7cceb370dc45659b5fbd93c2286b3790a7320e481",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "pairExist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "99f99c31b505ba808b5320dba8ebc3e2edfbd31409c3d49fdfccd4f6a31ed432": {
      "address": "0x4631BCAbD6dF18D94796344963cB60d44a4136b6",
      "txHash": "0xe06d4a31f365fce75233ab78e61238a2c126a314798cdfe8a66dc77296c67778",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "pairExist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cee7ee5f8e219e19cb556f18b42d40eb73965c89833551aa383b6ad58af402d6": {
      "address": "0x4c5859f0F772848b2D91F1D83E2Fe57935348029",
      "txHash": "0xbabed1a7215456984d7bee01d4143fcf09802e7d5cc0144a7b69a9395eb26fb2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/AirFactory.sol:28"
          },
          {
            "contract": "AirFactory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "afb790d7a202a56e396c378e29d95b9711c5d4108fa63fca72800a620f322ab3": {
      "address": "0x202CCe504e04bEd6fC0521238dDf04Bc9E8E15aB",
      "txHash": "0x8df9cf234724feed3b4b60a706cb8c6afc8252fe4581763df4b4569a3386a89a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/AirFactory.sol:28"
          },
          {
            "contract": "AirFactory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f48891eeca2a1d03285cbd06290a09fe6a02acd4bd29bfd8d109b4382eb9a74f": {
      "address": "0xB0f05d25e41FbC2b52013099ED9616f1206Ae21B",
      "txHash": "0xb9e7728f88ec8f78a681df0539b057bcae0ae1afb3b4395a8a54dd76f591ae0d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/AirFactory.sol:28"
          },
          {
            "contract": "AirFactory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "857deee9b161f5865e691855637038bf324cbbb4970587d588eb3107387b4865": {
      "address": "0xD49a0e9A4CD5979aE36840f542D2d7f02C4817Be",
      "txHash": "0xd84728743fc0d948f29eb34348d6663623193e102b5afd0359fc16771a4587f2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/AirFactory.sol:28"
          },
          {
            "contract": "AirFactory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "143d0584bf042aa5ea02ba31bfc7cdf1c192a9433cbc81dbafca0415da36ac9e": {
      "address": "0x1780bCf4103D3F501463AD3414c7f4b654bb7aFd",
      "txHash": "0xd2d466462eb986ebe3b6db577f9926d39c0c8745e86229118111be567ebedeee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/AirFactory.sol:28"
          },
          {
            "contract": "AirFactory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d03d4ba105ad177189cb3bca8468e046c868f133a2d24b4aed87ab578f978e39": {
      "address": "0xf5c4a909455C00B99A90d93b48736F3196DB5621",
      "txHash": "0xc63eb08d458843caf723fc044238bb742c412ba33ee7b665684d5d7eec714c19",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/AirFactory.sol:28"
          },
          {
            "contract": "AirFactory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6e917b62097f78c8d7ad24b9eccb142d0df79bd3a554f91f420d9d9958b81089": {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0x10dfb529d743aa44dafbad06266cc9f84d5a76279e1537f96152f9cd364702dd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/AirFactory.sol:28"
          },
          {
            "contract": "AirFactory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9e9c4606fb1b127cf1b43495b27378856d79b9b5e27471145e75df78bbe654da": {
      "address": "0xc3e53F4d16Ae77Db1c982e75a937B9f60FE63690",
      "txHash": "0xaca7f0608a8cba84376923967ed586f3c3ad62684ba4d1543d8ce8e85c36359a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/AirFactory.sol:28"
          },
          {
            "contract": "AirFactory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "30ad082c4e876f6ba3ae13189af0552b679b6bfa06dbb1ee5eadf078590af4ff": {
      "address": "0x99bbA657f2BbC93c02D617f8bA121cB8Fc104Acf",
      "txHash": "0x259cfdbf8b57c149c3210b8144b16353f2b96a72b9d43b22fc2148a575b50f93",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/AirFactory.sol:28"
          },
          {
            "contract": "AirFactory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2906c2678b93a5735bbc2a65c012505c7d8e9992076e33cdf2569697b4852f7c": {
      "address": "0xCD8a1C3ba11CF5ECfa6267617243239504a98d90",
      "txHash": "0x75fe548761ad4254d81d1123766b1cfe07b7c7506d2bb2e4ae1d1e375e9aa3be",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/AirFactory.sol:28"
          },
          {
            "contract": "AirFactory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "80f8f563670ea56cc916ab4cf844a442fd773cb40db38ee1232830c7eda47a9b": {
      "address": "0x922D6956C99E12DFeB3224DEA977D0939758A1Fe",
      "txHash": "0xe5dd6f490d0b04358fa14e27692f075c4a9f684df72d05e9deefe8a523c156d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/AirFactory.sol:28"
          },
          {
            "contract": "AirFactory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "298f2d17de04abe8e605592e28fb4cc1dfa1278ae33e932eb7e35098affc3205": {
      "address": "0xc96304e3c037f81dA488ed9dEa1D8F2a48278a75",
      "txHash": "0x1a165346d76a9bd5e312e6becb07f3ad899b10bcb26c050552dc719347e6bd9b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AirFactory",
            "label": "nftToAirToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/AirFactory.sol:27"
          },
          {
            "contract": "AirFactory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/AirFactory.sol:28"
          },
          {
            "contract": "AirFactory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/AirFactory.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fbb336841018554135a07edd62ca60860e7e911807c217c17c678161c5391efd": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x73572ac96ffa5c0ffccee6501000d5e28fe6483d455af16c66622d0d6ee21169",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NFT20Factory",
            "label": "nftToToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/NFT20Factory.sol:16"
          },
          {
            "contract": "NFT20Factory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/NFT20Factory.sol:17"
          },
          {
            "contract": "NFT20Factory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/NFT20Factory.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a384c924e2ad575ee63d1d29a61d5650de5aea063c212b1530cf2724414b1a0f": {
      "address": "0x22753E4264FDDc6181dc7cce468904A80a363E44",
      "txHash": "0x893546efe1f8131b4253a1f7a708c9b3704f3531fb9b130bcf64a21e107b709d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NFT20Factory",
            "label": "nftToToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/NFT20Factory.sol:16"
          },
          {
            "contract": "NFT20Factory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/NFT20Factory.sol:17"
          },
          {
            "contract": "NFT20Factory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/NFT20Factory.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "af14800295ca237c25261f60cfca77095682054909b5d5c768a57bb2350c2cc9": {
      "address": "0x457cCf29090fe5A24c19c1bc95F492168C0EaFdb",
      "txHash": "0xe0bffb41b925bd29487e7b2b5e7fcb562504c9954a43480c2e070df1475de600",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NFT20Factory",
            "label": "nftToToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/NFT20Factory.sol:16"
          },
          {
            "contract": "NFT20Factory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/NFT20Factory.sol:17"
          },
          {
            "contract": "NFT20Factory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/NFT20Factory.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "04198d4de581dbb83f1f2e310f816852fcb8112a98f19e7a80e09a856eeaf831": {
      "address": "0xd6e1afe5cA8D00A2EFC01B89997abE2De47fdfAf",
      "txHash": "0xba63543fdd00df3ba55e5633705494587000d245bff336402a32d67854b3f807",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NFT20Factory",
            "label": "nftToToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/NFT20Factory.sol:16"
          },
          {
            "contract": "NFT20Factory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/NFT20Factory.sol:17"
          },
          {
            "contract": "NFT20Factory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/NFT20Factory.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "429e79c719a68a9a0354b853c75626f7d9c7149199aaa014e96b78aa3303adf5": {
      "address": "0x32EEce76C2C2e8758584A83Ee2F522D4788feA0f",
      "txHash": "0x206976860e4c1620f2cef4875d2bf999d6ccc27a0361d08e3cc92fef4d7c3d77",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NFT20Factory",
            "label": "nftToToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/NFT20Factory.sol:16"
          },
          {
            "contract": "NFT20Factory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/NFT20Factory.sol:17"
          },
          {
            "contract": "NFT20Factory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/NFT20Factory.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3858b9bdcdba235ed6086474b4d2a88fea1ab940c96f700f05c2c872c03cbe55": {
      "address": "0x986aaa537b8cc170761FDAC6aC4fc7F9d8a20A8C",
      "txHash": "0x610a69308d8ebeecfefc49d66588f22b2a5c96de5a7b966417e25c11118ba0a4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NFT20Factory",
            "label": "nftToToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/NFT20Factory.sol:16"
          },
          {
            "contract": "NFT20Factory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/NFT20Factory.sol:17"
          },
          {
            "contract": "NFT20Factory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/NFT20Factory.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d9b518ad138dbca883f3ac250ed67e15cd465d4fc9ac499e19e5db49a23143d5": {
      "address": "0x63fea6E447F120B8Faf85B53cdaD8348e645D80E",
      "txHash": "0x68e1925fd3e9e7e5fdb42b3c9b4ccd7b51c7d9636b55585de01b9ab469e3b91f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NFT20Factory",
            "label": "nftToToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/NFT20Factory.sol:16"
          },
          {
            "contract": "NFT20Factory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/NFT20Factory.sol:17"
          },
          {
            "contract": "NFT20Factory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/NFT20Factory.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6f9f64c171d96f95ac708e57abcab7e72b70c2602f94a1c8ad0774d72ea0e1ba": {
      "address": "0xccf1769D8713099172642EB55DDFFC0c5A444FE9",
      "txHash": "0x7eaeef34c3cf02f5371707e181239f8b81b30cd2f15cebcc52d8074942d31115",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "NFT20Factory",
            "label": "nftToToken",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/NFT20Factory.sol:16"
          },
          {
            "contract": "NFT20Factory",
            "label": "indexToNft",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/NFT20Factory.sol:17"
          },
          {
            "contract": "NFT20Factory",
            "label": "counter",
            "type": "t_uint256",
            "src": "contracts/NFT20Factory.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0x41a159cc71ea4396de5034721d73de5a3a9be99c19d19cbc5d84117153c4dd16"
  }
}
